/*********************************************************************************
 * InitNode 1.0 nodejs框架 
 * 文件说明：Route 路由类
 *-------------------------------------------------------------------------------
 * 版权所有: CopyRight By initphp.com
 * 您可以自由使用该源码，但是在使用过程中，请保留作者信息。尊重他人劳动成果就是尊重自己
 *-------------------------------------------------------------------------------
 * $Author:zhuli
 * $Dtime:2012-9-9
***********************************************************************************/
var route = function () {
	
	var box 	= {}; 	//存放m,c,a
	var req 	= null;	//node服务器传递进来的req对象，包含http request信息
	var request = null; //框架中的request对象
	var config 	= null;
	var filter	= null;
	var url 	= require("url");

	/*	
	 *	路由模块初始化
	 */
	this.init = function (initnode) {
		box		= {};
		req 	= initnode.req;
		request = initnode.request;
		config	= initnode.config; 
		filter	= initnode.filter;
		parseRoute(); //进行路由解析
		initnode.route.box = box;
	};

	/*	
	 *	获取M参数
	 *	使用：initnode.route.getM()
	 */
	this.getM = function () {
		return box.m;
	};

	/*	
	 *	获取C参数
	 *	使用：initnode.route.getC
	 */
	this.getC = function () {
		return box.c;
	};

	/*	
	 *	获取A参数
	 *	使用：initnode.route.getA()
	 */
	this.getA = function () {
		return box.a;
	};

	/*	
	 *	路由解析 根据不同的路由规则解析
	 */
	var parseRoute = function () {
		var configTemp = {};
		configTemp.is_module = config.app.is_module;
		configTemp.route_way = config.app.route_way;
		configTemp.default_module = config.app.default_module;
		configTemp.default_controller = config.app.default_controller;
		configTemp.default_action = config.app.default_action;

		pathArr = path_array(); //路径
		getArr  = get_array();
		switch (configTemp.route_way) {
			case 'path' :
				return parsePathRoute(configTemp, pathArr);
				break;
		
			default:
				return parseDefaultRoute(configTemp, getArr);
				break;
		}
	};

	/*	
	 *	解析path模式路由
	 *	路由规则：http://127.0.0.1/admin/user/add/
	 */
	var parsePathRoute = function (configTemp, pathArr) {
		if (configTemp.is_module == true) {
			box.m = pathArr[1];
			if (box.m == '') {
				box.m = configTemp.default_module;
				box.c = configTemp.default_controller;
				box.a = configTemp.default_action;
				return box;
			}
			box.c = pathArr[2];
			box.a = pathArr[3];
		} else {
			box.c = pathArr[1];
			box.a = pathArr[2];
		}
		if (box.c == '') {
			box.m = configTemp.default_module;
			box.c = configTemp.default_controller;
			box.a = configTemp.default_action;
			return box;
		}
		
		if (box.a == '') {
			box.m = configTemp.default_module;
			box.c = configTemp.default_controller;
			box.a = configTemp.default_action;
			return box;
		}
		return box;
		
	};

	/*	
	 *	解析默认的路由规则
	 *	路由规则：http://127.0.0.1/?m=admin&c=user&a=add
	 */
	var parseDefaultRoute = function (configTemp, getArr) {
		if (configTemp.is_module == true) {
			box.m = getArr[0];
			if (box.m == '') {
				box.m = configTemp.default_module;
				box.c = configTemp.default_controller;
				box.a = configTemp.default_action;
				return box;
			}
		}
		box.c = getArr[1];
		if (box.c == '') {
			box.m = configTemp.default_module;
			box.c = configTemp.default_controller;
			box.a = configTemp.default_action;
			return box;
		}
		box.a = getArr[2];
		if (box.a == '') {
			box.m = configTemp.default_module;
			box.c = configTemp.default_controller;
			box.a = configTemp.default_action;
			return box;
		}
		return box;
	};
	
	var path_array = function () {
		var pathname = url.parse(req.url).pathname;
		pathname = filter.safe_path(pathname);
		var pathArr = new Array();
		pathArr = pathname.split('/');
		//静态资源路由判断
		box.static = '';
		if (config.static.name == pathArr[1]) {
			box.static = pathname;
		}
		
		return pathArr;
	};
	
	var get_array = function () {
		var getArr = new Array();
		getArr[0] = filter.safe_path(request.get('m'));
		getArr[1] = filter.safe_path(request.get('c'));
		getArr[2] = filter.safe_path(request.get('a'));
		return getArr;
	};
}

module.exports = route
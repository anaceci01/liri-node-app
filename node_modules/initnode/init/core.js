/*********************************************************************************
 * InitNode 1.0 nodejs框架 
 * 文件说明：核心类，主要加载了框架运行所需要的js类
 *-------------------------------------------------------------------------------
 * 版权所有: CopyRight By initphp.com
 * 您可以自由使用该源码，但是在使用过程中，请保留作者信息。尊重他人劳动成果就是尊重自己
 *-------------------------------------------------------------------------------
 * $Author:zhuli
 * $Dtime:2012-9-9
***********************************************************************************/
var core = function () {

	/*	
	 *	初始化必要的模块
	 *	初始化例如：Request，route等框架必须的模块
	 */
	this.init = function (initnode) {
		
		initnode.filter = initnode.load('filter', 'init'); //Filter 安全过滤
		
		initnode.request = initnode.load('request', 'init'); //Request 请求类
		initnode.request.init(initnode);
		
		initnode.log = initnode.load('log', 'init'); //日志类
		this.server_log(initnode); 
		
		initnode.route = initnode.load('route', 'init');//Route 路由类
		initnode.route.init(initnode);
		
		//判断是否是静态资源，（.jpg,.css）
		if (initnode.route.box.static == '') {

			//初始化设置Csrf,生成一个initnode_token的cookie值，用于防csrf攻击
			initnode.filter.request  = initnode.request;
			initnode.filter.response = initnode.response;
			initnode.filter.set_csrf();
		
			//模板类
			initnode.template = initnode.load('template', 'init');
			initnode.template.init();
			
			//App 应用运行类
			initnode.app = initnode.load('app', 'init');
			initnode.app.init(initnode);
			
		} else {
			initnode.static = initnode.load('static', 'init'); //静态资源服务器实例
			initnode.static.init(initnode);
		}
	};
	
	/*	
	 *	服务器访问日志 就像Nginx的访问日志一样
	 */
	this.server_log = function (initnode) {
		if (initnode.config.server.log == true) {
			var myDate = new Date();
			var path = initnode.config.server.log_path;
			var log_info = '';
			log_info 	+=  myDate.getFullYear() + '-' + myDate.getMonth() + '-' + myDate.getDate() +' ';
			log_info 	+=  myDate.toLocaleTimeString() + ' ';
			log_info 	+=  '[' + initnode.request.getClientIp() + '] ';
			log_info 	+=	initnode.request.headers('user-agent') + ' ';
			log_info 	+=	'host:' + initnode.request.headers('host') + ' ';
			log_info 	+=	initnode.req.url + ' ';
			log_info 	+=	initnode.req.method + ' ';
			log_info 	+= '\r\n';
			initnode.log.write(path, log_info);
		}
		return 	true;	
	};

}

module.exports = core;